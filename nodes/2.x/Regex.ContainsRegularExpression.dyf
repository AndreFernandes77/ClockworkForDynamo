{
  "Uuid": "f7ef95e1-3082-4cda-a204-a35fd8dc81ed",
  "IsCustomNode": true,
  "Category": "Clockwork.Core.String.Inspect.Actions",
  "Description": "Determines if a regular expression matches a string (or a list of strings), i.e. occurs anywhere in the string, and returns a boolean value (or a list, depending on the input). The syntax for regular expressions is explained at\r\nhttp://ironpython-test.readthedocs.org/en/latest/howto/regex.html",
  "Name": "Regex.ContainsRegularExpression",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "RegEx",
        "TypeName": "string",
        "TypeRank": 0,
        "DefaultValue": null
      },
      "Id": "530bb7cb31044bfeb27cd9235d17535d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3b2be73684b941ab9e2d7f83d9ee838d",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "str",
        "TypeName": "string",
        "TypeRank": 0,
        "DefaultValue": null
      },
      "Id": "601f6589cfcc41d18a9f288c81465dcf",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dca04eefe5294ac0a7ea772cb5751163",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "bool",
      "Id": "79e28ed510cb448b9bd5e1c700e5870e",
      "Inputs": [
        {
          "Id": "806d7f7926254b069e3f79887de62176",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "c85cfb4b-6b9e-4d60-a5de-557560a6b747",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "15d0d6d8b8e3414a8dc36a70ca01a7f9",
      "Inputs": [
        {
          "Id": "a20a296fe6fe407dbe9ed1fe0f87f4bf",
          "Name": "regExp",
          "Description": " The regular expression\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ee78d3b4a38444d097e766fb7b00fa96",
          "Name": "ignoreCase",
          "Description": " Perform case-insensitive matching\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b0d26a95fb1d4359892d68bdbd36d591",
          "Name": "useLocale",
          "Description": " Treat special characters (e.g. 'Ã¼') from the currently set system locale as letters\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "febeb251dbd54d669895629d749178f8",
          "Name": "dotAll",
          "Description": " Make . match any character, including newlines\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fbf4868d4fbd4db49537c49ac16bd9dd",
          "Name": "multilineMatching",
          "Description": " ^ matches at the beginning of each line, $ matches at the end of each line\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a8e1fc0c640049fd839b95869b052d6b",
          "Name": "compRegExp",
          "Description": " Compiled Regular Expression flags",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "This is a helper node for setting certain flags for the Regular Expresssion nodes.\r\nhttp://ironpython-test.readthedocs.org/en/latest/howto/regex.html"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "ignoreCase",
        "TypeName": "bool",
        "TypeRank": 0,
        "DefaultValue": "false"
      },
      "Id": "77a17e075ea84236a1a0092540d04e9a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "36f7256ef0704658a0ef81cf7725b5ec",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "useLocale",
        "TypeName": "bool",
        "TypeRank": 0,
        "DefaultValue": "false"
      },
      "Id": "eeb2819de65144e89992c312b1b1f28f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d3c1156d065e444280d8923d3707b631",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "dotAll",
        "TypeName": "bool",
        "TypeRank": 0,
        "DefaultValue": "false"
      },
      "Id": "3a587d9e643f4aee813bc7cfcb83f721",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4cefab1ef3344df0a83407330e41dff9",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "multilineMatching",
        "TypeName": "bool",
        "TypeRank": 0,
        "DefaultValue": "false"
      },
      "Id": "fc12c7b2faf14ae5bc75b12e4fdcedb1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "39fcb458bcb74772baef951a46c2d681",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nimport re\r\n\r\ndef ContainsRegex(regex, str):\r\n\tif regex.search(str): return True\r\n\telse: return False\r\n\r\nif isinstance(IN[1], list): OUT = [ContainsRegex(IN[0], x) for x in IN[1]]\r\nelse: OUT = ContainsRegex(IN[0], IN[1])",
      "VariableInputPorts": true,
      "Id": "341dd69f27d341d58247fe42d4a5ec01",
      "Inputs": [
        {
          "Id": "c774a8ebb7b845dca8c6848c14fe069b",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "034e5fa588f6458f9075cbcb3ec7f266",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8177a5c3b12449169a0bd7a0b36f1d1c",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    }
  ],
  "Connectors": [
    {
      "Start": "3b2be73684b941ab9e2d7f83d9ee838d",
      "End": "a20a296fe6fe407dbe9ed1fe0f87f4bf",
      "Id": "7aebd29d93194935b299519af65a529c"
    },
    {
      "Start": "dca04eefe5294ac0a7ea772cb5751163",
      "End": "034e5fa588f6458f9075cbcb3ec7f266",
      "Id": "caa4dbbefe764515a1d4e1bcc94c9656"
    },
    {
      "Start": "a8e1fc0c640049fd839b95869b052d6b",
      "End": "c774a8ebb7b845dca8c6848c14fe069b",
      "Id": "870236532d3443c4b9316f72e5095191"
    },
    {
      "Start": "36f7256ef0704658a0ef81cf7725b5ec",
      "End": "ee78d3b4a38444d097e766fb7b00fa96",
      "Id": "e7fd955a92e848d692cde0db9bf8c87d"
    },
    {
      "Start": "d3c1156d065e444280d8923d3707b631",
      "End": "b0d26a95fb1d4359892d68bdbd36d591",
      "Id": "954f7fe9301247a199e32db89ee418ea"
    },
    {
      "Start": "4cefab1ef3344df0a83407330e41dff9",
      "End": "febeb251dbd54d669895629d749178f8",
      "Id": "b268ae99c3f64db79c1d3258bbccbb22"
    },
    {
      "Start": "39fcb458bcb74772baef951a46c2d681",
      "End": "fbf4868d4fbd4db49537c49ac16bd9dd",
      "Id": "c4cd9acc81e14b6ca8b87123fe3173c7"
    },
    {
      "Start": "8177a5c3b12449169a0bd7a0b36f1d1c",
      "End": "806d7f7926254b069e3f79887de62176",
      "Id": "3ea900288cc44937adaae38d21a423f7"
    }
  ],
  "Dependencies": [
    "c85cfb4b-6b9e-4d60-a5de-557560a6b747"
  ],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.0.0.4654",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "Id": "530bb7cb31044bfeb27cd9235d17535d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -539.60396591003,
        "Y": 138.270272163644
      },
      {
        "Id": "601f6589cfcc41d18a9f288c81465dcf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 445.087740199859,
        "Y": 507.791526642227
      },
      {
        "Id": "79e28ed510cb448b9bd5e1c700e5870e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Output",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 776.685077306307,
        "Y": 396.094432821876
      },
      {
        "Id": "15d0d6d8b8e3414a8dc36a70ca01a7f9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String.CompileRegularExpression",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 265.39603408997,
        "Y": 303.270272163644
      },
      {
        "Id": "77a17e075ea84236a1a0092540d04e9a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -539.60396591003,
        "Y": 221.270272163644
      },
      {
        "Id": "eeb2819de65144e89992c312b1b1f28f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -539.60396591003,
        "Y": 314.270272163644
      },
      {
        "Id": "3a587d9e643f4aee813bc7cfcb83f721",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -539.60396591003,
        "Y": 423.270272163644
      },
      {
        "Id": "fc12c7b2faf14ae5bc75b12e4fdcedb1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -539.60396591003,
        "Y": 515.270272163644
      },
      {
        "Id": "341dd69f27d341d58247fe42d4a5ec01",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 622.681885353249,
        "Y": 394.866541104159
      }
    ],
    "Annotations": [],
    "X": 523.165817113695,
    "Y": 57.1818066462573,
    "Zoom": 0.71117241934071
  }
}
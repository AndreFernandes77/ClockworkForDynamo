{
  "Uuid": "c7b1d8ca-bc1f-4755-9632-bcaaad615794",
  "IsCustomNode": true,
  "Category": "Clockwork.List.Organize.Actions",
  "Description": "Sorts a list of lists by one of its sublists",
  "Name": "List.SortListOfLists",
  "ElementResolver": {
    "ResolutionMap": {
      "List": {
        "Key": "DSCore.List",
        "Value": "DSCoreNodes.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\n\r\nlists = IN[0]\r\nsortindex = int(IN[1])\r\ncaseinsensitive = IN[2]\r\nsortdescending = IN[3]\r\n\r\n# make sure that case-insensitive is turned of if it is not strings we're sorting\r\nif caseinsensitive == True and isinstance(lists[0][sortindex], basestring) == False:\r\n\tcaseinsensitive = False\r\nif caseinsensitive == True:\r\n\tif sortdescending == True:\r\n\t\tOUT = sorted(lists, key=lambda lists:lists[sortindex].lower(), reverse=True)\r\n\telse:\r\n\t\tOUT = sorted(lists, key=lambda lists:lists[sortindex].lower())\r\nelse:\r\n\tif sortdescending == True:\r\n\t\tOUT = sorted(lists, key=lambda lists:lists[sortindex], reverse=True)\r\n\telse:\r\n\t\tOUT = sorted(lists, key=lambda lists:lists[sortindex])",
      "VariableInputPorts": true,
      "Id": "57bb5c7c2f81471da591ea67161da6a8",
      "Inputs": [
        {
          "Id": "37bc32087e014ea59321da4f144227fc",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f0293a50a8404196bd4293fdfe51b779",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "84b3b3ade5854db692ae0a5eec642c99",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c76e5009d1bc4b36a218f3b1a84729a5",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "42584ff1a1bf47769cd9ae6f9ca72d87",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "seq",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null
      },
      "Id": "ba099a6115514ccbb1d479d3ed231976",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f2ce5b88170f4737b20bfaf5edfb6648",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "seq",
      "Id": "0c31c9a4b8a744e69a4ea1bed464f373",
      "Inputs": [
        {
          "Id": "082c66bad25a492c896b1c6dc94cb78d",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "sortIndex",
        "TypeName": "int",
        "TypeRank": 0,
        "DefaultValue": "0"
      },
      "Id": "f7fa4e35f6ba4801b01fd209929c2d08",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2d9cf06559494766b0b186e47c7a143f",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "caseInsensitive",
        "TypeName": "bool",
        "TypeRank": 0,
        "DefaultValue": "false"
      },
      "Id": "857474aae51d49009c2cd8f0df3b05e7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a7855e9ce2df44e38a7c4c49b013d2fe",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "orderDescending",
        "TypeName": "bool",
        "TypeRank": 0,
        "DefaultValue": "false"
      },
      "Id": "90fc23e171ce42e5891d12a2f0254273",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1ee03eb48bbc43f594ad74843edc5251",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "784a13b3a5b44befbec0abd59a9809bd",
      "Inputs": [
        {
          "Id": "a1eea9ca71274d9088407c355ecf124b",
          "Name": "lists",
          "Description": "A list of lists to be transposed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c5c3447ce70f41ca897ff0259b1de8bb",
          "Name": "lists",
          "Description": "A list of transposed lists.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "744a4618c4074752b3fcc199d06f374e",
      "Inputs": [
        {
          "Id": "a161a5cf6ba545bc996d30441cc69390",
          "Name": "lists",
          "Description": "A list of lists to be transposed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c1ec016d8563406f92119b584883b7a7",
          "Name": "lists",
          "Description": "A list of transposed lists.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    }
  ],
  "Connectors": [
    {
      "Start": "42584ff1a1bf47769cd9ae6f9ca72d87",
      "End": "a161a5cf6ba545bc996d30441cc69390",
      "Id": "4c82d46840b9486887d4a3ea82035fe7"
    },
    {
      "Start": "f2ce5b88170f4737b20bfaf5edfb6648",
      "End": "a1eea9ca71274d9088407c355ecf124b",
      "Id": "bef4ce140e14481bb0c5e3267d549881"
    },
    {
      "Start": "2d9cf06559494766b0b186e47c7a143f",
      "End": "f0293a50a8404196bd4293fdfe51b779",
      "Id": "769cb8ca309946b7a861a17bfc4a5155"
    },
    {
      "Start": "a7855e9ce2df44e38a7c4c49b013d2fe",
      "End": "84b3b3ade5854db692ae0a5eec642c99",
      "Id": "51885b0d39be490a8e5f8aaa87a06252"
    },
    {
      "Start": "1ee03eb48bbc43f594ad74843edc5251",
      "End": "c76e5009d1bc4b36a218f3b1a84729a5",
      "Id": "d469c1aab6e04fcb959fc6ffda6ae20d"
    },
    {
      "Start": "c5c3447ce70f41ca897ff0259b1de8bb",
      "End": "37bc32087e014ea59321da4f144227fc",
      "Id": "bcc0cd8befc64f218fde08af1c436b01"
    },
    {
      "Start": "c1ec016d8563406f92119b584883b7a7",
      "End": "082c66bad25a492c896b1c6dc94cb78d",
      "Id": "041a31d9e5c54cfd8a5548052f5c906c"
    }
  ],
  "Dependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.0.0.4654",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "Id": "57bb5c7c2f81471da591ea67161da6a8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 430.9375975039,
        "Y": 86.9500780031202
      },
      {
        "Id": "ba099a6115514ccbb1d479d3ed231976",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 0.0,
        "Y": 0.0
      },
      {
        "Id": "0c31c9a4b8a744e69a4ea1bed464f373",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Output",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 835.07488299532,
        "Y": 86.9500780031202
      },
      {
        "Id": "f7fa4e35f6ba4801b01fd209929c2d08",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 0.0,
        "Y": 83.0
      },
      {
        "Id": "857474aae51d49009c2cd8f0df3b05e7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 0.0,
        "Y": 167.0
      },
      {
        "Id": "90fc23e171ce42e5891d12a2f0254273",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 0.0,
        "Y": 250.0
      },
      {
        "Id": "784a13b3a5b44befbec0abd59a9809bd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 193.815912636506,
        "Y": -0.03744149765987
      },
      {
        "Id": "744a4618c4074752b3fcc199d06f374e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Transpose",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 617.385335413417,
        "Y": 87.4180967238691
      }
    ],
    "Annotations": [],
    "X": 30.0,
    "Y": 240.039408866995,
    "Zoom": 1.05254515599343
  }
}
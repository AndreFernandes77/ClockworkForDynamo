{
  "Uuid": "5d8b23b1-a03a-429b-9049-1f8456932376",
  "IsCustomNode": true,
  "Category": "Clockwork.Core.String.Inspect.Actions",
  "Description": "Determines if a string starts with the regular expression and returns a boolean value (or a list, depending on the input). The syntax for regular expressions is explained at\r\nhttp://ironpython-test.readthedocs.org/en/latest/howto/regex.html",
  "Name": "Regex.StartsWithRegularExpression",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "RegEx",
        "TypeName": "string",
        "TypeRank": 0,
        "DefaultValue": null
      },
      "Id": "530bb7cb31044bfeb27cd9235d17535d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6574897900bd490a89bec3948f12b6bf",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "str",
        "TypeName": "string",
        "TypeRank": 0,
        "DefaultValue": null
      },
      "Id": "601f6589cfcc41d18a9f288c81465dcf",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ff14e532c6ce48d69f55319b7e62aa92",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "bool",
      "Id": "79e28ed510cb448b9bd5e1c700e5870e",
      "Inputs": [
        {
          "Id": "918031df61c94f3ca3698c54f57b62ee",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nimport re\r\n\r\ndef StartsWithRegex(regex, str):\r\n\tif regex.match(str): return True\r\n\telse: return False\r\n\r\nif isinstance(IN[1], list): OUT = [StartsWithRegex(IN[0], x) for x in IN[1]]\r\nelse: OUT = StartsWithRegex(IN[0], IN[1])",
      "VariableInputPorts": true,
      "Id": "d6455be28efe4008afe757ebf981e42f",
      "Inputs": [
        {
          "Id": "032f9d5ec1f5479bb81cd47a745e272d",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a7ecbb5c497746b3a9d507431ddfcb34",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6b36f13dda3249b9a7be485978f94326",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "c85cfb4b-6b9e-4d60-a5de-557560a6b747",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "15d0d6d8b8e3414a8dc36a70ca01a7f9",
      "Inputs": [
        {
          "Id": "05352b98108d4a82a1e0238ad9461d99",
          "Name": "regExp",
          "Description": " The regular expression\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1ae1a8f890894f0aa60c1c249121eb2f",
          "Name": "ignoreCase",
          "Description": " Perform case-insensitive matching\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "114adab04c9942738a69a3cb9349b8a2",
          "Name": "useLocale",
          "Description": " Treat special characters (e.g. 'Ã¼') from the currently set system locale as letters\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "316bc5e568104ff883973106a9b37cbe",
          "Name": "dotAll",
          "Description": " Make . match any character, including newlines\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e92fd14ebdd3457db4f78abc9120ea19",
          "Name": "multilineMatching",
          "Description": " ^ matches at the beginning of each line, $ matches at the end of each line\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8ebf56c9218c4258b89f90854150f813",
          "Name": "compRegExp",
          "Description": " Compiled Regular Expression flags",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "This is a helper node for setting certain flags for the Regular Expresssion nodes.\r\nhttp://ironpython-test.readthedocs.org/en/latest/howto/regex.html"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "ignoreCase",
        "TypeName": "bool",
        "TypeRank": 0,
        "DefaultValue": "false"
      },
      "Id": "77a17e075ea84236a1a0092540d04e9a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a15de456535a415895217fe9c241e3df",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "useLocale",
        "TypeName": "bool",
        "TypeRank": 0,
        "DefaultValue": "false"
      },
      "Id": "eeb2819de65144e89992c312b1b1f28f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f48913faf8584db788bcfba8d0755651",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "dotAll",
        "TypeName": "bool",
        "TypeRank": 0,
        "DefaultValue": "false"
      },
      "Id": "3a587d9e643f4aee813bc7cfcb83f721",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bb0e076aa38f46a3a7a1ec2b88be95c7",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "multilineMatching",
        "TypeName": "bool",
        "TypeRank": 0,
        "DefaultValue": "false"
      },
      "Id": "fc12c7b2faf14ae5bc75b12e4fdcedb1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a070d50b6faf4576adb1a7b2d19acef6",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    }
  ],
  "Connectors": [
    {
      "Start": "6574897900bd490a89bec3948f12b6bf",
      "End": "05352b98108d4a82a1e0238ad9461d99",
      "Id": "094000edc6b3456097212022953cb671"
    },
    {
      "Start": "ff14e532c6ce48d69f55319b7e62aa92",
      "End": "a7ecbb5c497746b3a9d507431ddfcb34",
      "Id": "d5867746a96348788210d7ec2dde1e70"
    },
    {
      "Start": "6b36f13dda3249b9a7be485978f94326",
      "End": "918031df61c94f3ca3698c54f57b62ee",
      "Id": "7cb63d2a125a4973a0ce57d0c485ef10"
    },
    {
      "Start": "8ebf56c9218c4258b89f90854150f813",
      "End": "032f9d5ec1f5479bb81cd47a745e272d",
      "Id": "2fa7d017f30a487f9b065393378c0788"
    },
    {
      "Start": "a15de456535a415895217fe9c241e3df",
      "End": "1ae1a8f890894f0aa60c1c249121eb2f",
      "Id": "8f31d410404b4e208b0b8053e11c9905"
    },
    {
      "Start": "f48913faf8584db788bcfba8d0755651",
      "End": "114adab04c9942738a69a3cb9349b8a2",
      "Id": "41b429809c1c4e968d273f6c763910da"
    },
    {
      "Start": "bb0e076aa38f46a3a7a1ec2b88be95c7",
      "End": "316bc5e568104ff883973106a9b37cbe",
      "Id": "748d1228243a4dfa8feebec6b660e027"
    },
    {
      "Start": "a070d50b6faf4576adb1a7b2d19acef6",
      "End": "e92fd14ebdd3457db4f78abc9120ea19",
      "Id": "3b5170321b1d4800b29ac745d821108f"
    }
  ],
  "Dependencies": [
    "c85cfb4b-6b9e-4d60-a5de-557560a6b747"
  ],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.0.0.4654",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "Id": "530bb7cb31044bfeb27cd9235d17535d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -539.60396591003,
        "Y": 138.270272163644
      },
      {
        "Id": "601f6589cfcc41d18a9f288c81465dcf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 441.541431534397,
        "Y": 505.427320865252
      },
      {
        "Id": "79e28ed510cb448b9bd5e1c700e5870e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Output",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 796.780826410591,
        "Y": 400.822844375826
      },
      {
        "Id": "d6455be28efe4008afe757ebf981e42f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 607.39603408997,
        "Y": 397.270272163644
      },
      {
        "Id": "15d0d6d8b8e3414a8dc36a70ca01a7f9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String.CompileRegularExpression",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 265.39603408997,
        "Y": 303.270272163644
      },
      {
        "Id": "77a17e075ea84236a1a0092540d04e9a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -539.60396591003,
        "Y": 221.270272163644
      },
      {
        "Id": "eeb2819de65144e89992c312b1b1f28f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -539.60396591003,
        "Y": 314.270272163644
      },
      {
        "Id": "3a587d9e643f4aee813bc7cfcb83f721",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -539.60396591003,
        "Y": 423.270272163644
      },
      {
        "Id": "fc12c7b2faf14ae5bc75b12e4fdcedb1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -539.60396591003,
        "Y": 515.270272163644
      }
    ],
    "Annotations": [],
    "X": 485.95600605555,
    "Y": 45.241055329102,
    "Zoom": 0.845950052012563
  }
}
{
  "Uuid": "c9b8b8ab-bdc8-43d8-9004-47977bc14e03",
  "IsCustomNode": true,
  "Category": "Clockwork.String.Modify.Actions",
  "Description": "Replaces multiple search terms in a given string with multiple replacements",
  "Name": "String.ReplaceMultiple",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Based on https://gist.github.com/bgusach/a967e0587d6e01e889fd1d776c5f3729\r\n\r\nimport clr\r\nimport re\r\n\r\ndef ReplaceMultiple(str, searchstr, replacestr, sort):\r\n\treplacements = dict(zip(searchstr, replacestr))\r\n\tif sort: substrs = sorted(replacements, key=len, reverse=True)\r\n\telse: substrs = searchstr\r\n\tregexp = re.compile('|'.join(map(re.escape, substrs)))\r\n\treturn regexp.sub(lambda match: replacements[match.group(0)], str)\r\n\t\r\nif isinstance(IN[1], list): searchstr = IN[1]\r\nelse: searchstr = [IN[1]]\r\nif isinstance(IN[2], list): replacestr = IN[2]\r\nelse: replacestr = [IN[2]]\r\n\r\nif isinstance(IN[0], list): OUT = [ReplaceMultiple(x, searchstr, replacestr, IN[3]) for x in IN[0]]\r\nelse: OUT = ReplaceMultiple(IN[0], searchstr, replacestr, IN[3])",
      "VariableInputPorts": true,
      "Id": "5981cb6bce3742b6a28c9d50b1bad632",
      "Inputs": [
        {
          "Id": "e2735ff7d8dc4bec93bc2542722e2629",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2c86efb1760743448f31a0987fd5b0f4",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a9e35c0e7b7547b5b43cba4e319407f1",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6bb76f8d355d437087fea25fcfcb74a7",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1a2e5d299fb545b6aa2fb27f4ee32f62",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "str",
        "TypeName": "string",
        "TypeRank": 0,
        "DefaultValue": null
      },
      "Id": "963cfa30a1914a728b4a7a2b078f2188",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "46b3e308aec24d959e90f638e4ed3d98",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "searchFor",
        "TypeName": "string",
        "TypeRank": 1,
        "DefaultValue": null
      },
      "Id": "29a332d7edb145a2af102331e7ff77e3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "90487eb0cefa40979ae4dcea2a55f32b",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "replaceWith",
        "TypeName": "string",
        "TypeRank": 1,
        "DefaultValue": null
      },
      "Id": "129116714f1d4f0d8f829d2c11a6f8fa",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "68c3c911b1d341febb3bfc90c91349e9",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "sortSearchTermsBySize",
        "TypeName": "bool",
        "TypeRank": 0,
        "DefaultValue": "false"
      },
      "Id": "633ee0dbbf9a427d80689f2970a516c5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cb44db55a2e74be1a3312631441c531e",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "str",
      "Id": "88a803dae51744a1b89d8e42c6340b82",
      "Inputs": [
        {
          "Id": "3c83bcb3c07a43399201a563afceb295",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    }
  ],
  "Connectors": [
    {
      "Start": "1a2e5d299fb545b6aa2fb27f4ee32f62",
      "End": "3c83bcb3c07a43399201a563afceb295",
      "Id": "b845eb8690724b6caa9f3d8f87f3fba5"
    },
    {
      "Start": "46b3e308aec24d959e90f638e4ed3d98",
      "End": "e2735ff7d8dc4bec93bc2542722e2629",
      "Id": "40675a76baef4cfdaf5701be3351f9eb"
    },
    {
      "Start": "90487eb0cefa40979ae4dcea2a55f32b",
      "End": "2c86efb1760743448f31a0987fd5b0f4",
      "Id": "09e914a994e34208aed89d2678aab033"
    },
    {
      "Start": "68c3c911b1d341febb3bfc90c91349e9",
      "End": "a9e35c0e7b7547b5b43cba4e319407f1",
      "Id": "d3f6354a7c0f427ea901f2cf5b028f42"
    },
    {
      "Start": "cb44db55a2e74be1a3312631441c531e",
      "End": "6bb76f8d355d437087fea25fcfcb74a7",
      "Id": "4e55029027224c2499c9fae60168bf91"
    }
  ],
  "Dependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.0.0.4654",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "Id": "5981cb6bce3742b6a28c9d50b1bad632",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python Script",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 401.0,
        "Y": 187.0
      },
      {
        "Id": "963cfa30a1914a728b4a7a2b078f2188",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 0.0,
        "Y": 0.0
      },
      {
        "Id": "29a332d7edb145a2af102331e7ff77e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 0.0,
        "Y": 150.0
      },
      {
        "Id": "129116714f1d4f0d8f829d2c11a6f8fa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 0.0,
        "Y": 300.0
      },
      {
        "Id": "633ee0dbbf9a427d80689f2970a516c5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Input",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -320.0,
        "Y": 421.0
      },
      {
        "Id": "88a803dae51744a1b89d8e42c6340b82",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Output",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 600.0,
        "Y": 187.0
      }
    ],
    "Annotations": [],
    "X": 416.0,
    "Y": 103.0,
    "Zoom": 1.0
  }
}
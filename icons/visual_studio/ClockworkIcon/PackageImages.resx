<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="DefaultCustomNode.Small" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>